{
  "version": 3,
  "sources": ["../../leaflet-gpx/gpx.js"],
  "sourcesContent": ["/**\n * Copyright (C) 2011-2012 Pavel Shramov\n * Copyright (C) 2013-2017 Maxime Petazzoni <maxime.petazzoni@bulix.org>\n * All Rights Reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * - Redistributions of source code must retain the above copyright notice,\n *   this list of conditions and the following disclaimer.\n *\n * - Redistributions in binary form must reproduce the above copyright notice,\n *   this list of conditions and the following disclaimer in the documentation\n *   and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n */\n\n/*\n * Thanks to Pavel Shramov who provided the initial implementation and Leaflet\n * integration. Original code was at https://github.com/shramov/leaflet-plugins.\n *\n * It was then cleaned-up and modified to record and make available more\n * information about the GPX track while it is being parsed so that the result\n * can be used to display additional information about the track that is\n * rendered on the Leaflet map.\n */\n\n'use strict';\n\nvar _MAX_POINT_INTERVAL_MS = 15000;\nvar _SECOND_IN_MILLIS = 1000;\nvar _MINUTE_IN_MILLIS = 60 * _SECOND_IN_MILLIS;\nvar _HOUR_IN_MILLIS = 60 * _MINUTE_IN_MILLIS;\nvar _DAY_IN_MILLIS = 24 * _HOUR_IN_MILLIS;\n\nvar _GPX_STYLE_NS = 'http://www.topografix.com/GPX/gpx_style/0/2';\nvar _DEFAULT_ICON = new L.Icon.Default;\n\nvar _DEFAULT_MARKERS = {\n  startIcon: _DEFAULT_ICON,\n  endIcon: _DEFAULT_ICON,\n\n  // Based on 'sym' waypoint key\n  wptIcons: {\n    '': _DEFAULT_ICON,\n  },\n\n  // Based on 'type' waypoint key\n  wptTypeIcons: {\n    '': _DEFAULT_ICON\n  },\n\n  // Based on a regex over the waypoint's name\n  pointMatchers: [],\n};\n\nvar _DEFAULT_MARKER_OPTS = {\n  iconSize: [33, 45],\n  iconAnchor: [16, 45],\n  clickable: false\n};\n\nvar _DEFAULT_POLYLINE_OPTS = {\n  color: 'blue'\n};\n\nvar _DEFAULT_GPX_OPTS = {\n  parseElements: ['track', 'route', 'waypoint'],\n  joinTrackSegments: true\n};\n\nL.GPX = L.FeatureGroup.extend({\n  initialize: function(gpx, options) {\n    options.max_point_interval = options.max_point_interval || _MAX_POINT_INTERVAL_MS;\n    options.markers = this._merge_objs(\n      _DEFAULT_MARKERS,\n      options.markers || {});\n    options.marker_options = this._merge_objs(\n      _DEFAULT_MARKER_OPTS,\n      options.marker_options || {});\n    options.polyline_options = options.polyline_options || [];\n    options.gpx_options = this._merge_objs(\n      _DEFAULT_GPX_OPTS,\n      options.gpx_options || {});\n\n    L.Util.setOptions(this, options);\n\n    // Base icon class for track pins.\n    L.GPXTrackIcon = L.Icon.extend({ options: options.marker_options });\n\n    this._gpx = gpx;\n    this._layers = {};\n    this._prepare_markers(options.markers);\n    this._init_info();\n\n    if (gpx) {\n      this._parse(gpx, options, this.options.async);\n    }\n  },\n\n  get_duration_string: function(duration, hidems) {\n    var s = '';\n\n    if (duration >= _DAY_IN_MILLIS) {\n      s += Math.floor(duration / _DAY_IN_MILLIS) + 'd ';\n      duration = duration % _DAY_IN_MILLIS;\n    }\n\n    if (duration >= _HOUR_IN_MILLIS) {\n      s += Math.floor(duration / _HOUR_IN_MILLIS) + ':';\n      duration = duration % _HOUR_IN_MILLIS;\n    }\n\n    var mins = Math.floor(duration / _MINUTE_IN_MILLIS);\n    duration = duration % _MINUTE_IN_MILLIS;\n    if (mins < 10) s += '0';\n    s += mins + '\\'';\n\n    var secs = Math.floor(duration / _SECOND_IN_MILLIS);\n    duration = duration % _SECOND_IN_MILLIS;\n    if (secs < 10) s += '0';\n    s += secs;\n\n    if (!hidems && duration > 0) s += '.' + Math.round(Math.floor(duration)*1000)/1000;\n    else s += '\"';\n\n    return s;\n  },\n\n  get_duration_string_iso: function(duration, hidems) {\n    var s = this.get_duration_string(duration, hidems);\n    return s.replace(\"'\",':').replace('\"','');\n  },\n  _toFixed_helper: function(v, unit = 0) {\n    if (typeof(v) == 'number'){\n      return v.toFixed(unit);\n    }\n    return \"?\";\n  },\n  // Public methods\n  to_miles:            function(v) { return v / 1.60934; },\n  to_ft:               function(v) { return v * 3.28084; },\n  m_to_km:             function(v) { return v / 1000; },\n  m_to_mi:             function(v) { return v / 1609.34; },\n  ms_to_kmh:           function(v) { return v * 3.6; },\n  ms_to_mih:           function(v) { return v / 1609.34 * 3600; },\n\n  get_name:            function() { return this._info.name; },\n  get_desc:            function() { return this._info.desc; },\n  get_author:          function() { return this._info.author; },\n  get_copyright:       function() { return this._info.copyright; },\n  get_distance:        function() { return this._info.length; },\n  get_distance_imp:    function() { return this.to_miles(this.m_to_km(this.get_distance())); },\n\n  get_start_time:      function() { return this._info.duration.start; },\n  get_end_time:        function() { return this._info.duration.end; },\n  get_moving_time:     function() { return this._info.duration.moving; },\n  get_total_time:      function() { return this._info.duration.total; },\n\n  get_moving_pace:     function() { return this.get_moving_time() / this.m_to_km(this.get_distance()); },\n  get_moving_pace_imp: function() { return this.get_moving_time() / this.get_distance_imp(); },\n\n  get_moving_speed:    function() { return this.m_to_km(this.get_distance()) / (this.get_moving_time() / (3600 * 1000)) ; },\n  get_moving_speed_imp:function() { return this.to_miles(this.m_to_km(this.get_distance())) / (this.get_moving_time() / (3600 * 1000)) ; },\n\n  get_total_speed:     function() { return this.m_to_km(this.get_distance()) / (this.get_total_time() / (3600 * 1000)); },\n  get_total_speed_imp: function() { return this.to_miles(this.m_to_km(this.get_distance())) / (this.get_total_time() / (3600 * 1000)); },\n\n  get_elevation_gain:     function() { return this._info.elevation.gain; },\n  get_elevation_loss:     function() { return this._info.elevation.loss; },\n  get_elevation_gain_imp: function() { return this.to_ft(this.get_elevation_gain()); },\n  get_elevation_loss_imp: function() { return this.to_ft(this.get_elevation_loss()); },\n  get_elevation_data:     function() {\n    var _this = this;\n    return this._info.elevation._points.map(\n      function(p) { return _this._prepare_data_point(p, _this.m_to_km, null,\n        function(a, b) { return _this._toFixed_helper(a, 2) + ' km, ' + _this._toFixed_helper(b, 0) + ' m'; });\n      });\n  },\n  get_elevation_data_imp: function() {\n    var _this = this;\n    return this._info.elevation._points.map(\n      function(p) { return _this._prepare_data_point(p, _this.m_to_mi, _this.to_ft,\n        function(a, b) { return _this._toFixed_helper(a, 2) + ' mi, ' + _this._toFixed_helper(b, 0) + ' ft'; });\n      });\n  },\n  get_elevation_max:      function() { return this._info.elevation.max; },\n  get_elevation_min:      function() { return this._info.elevation.min; },\n  get_elevation_max_imp:  function() { return this.to_ft(this.get_elevation_max()); },\n  get_elevation_min_imp:  function() { return this.to_ft(this.get_elevation_min()); },\n\n  get_speed_data:         function() {\n    var _this = this;\n    return this._info.speed._points.map(\n      function(p) { return _this._prepare_data_point(p, _this.m_to_km, _this.ms_to_kmh,\n        function(a, b) { return _this._toFixed_helper(a, 2) + ' km, ' + _this._toFixed_helper(b, 2) + ' km/h'; });\n      });\n  },\n  get_speed_data_imp: function() {\n    var _this = this;\n    return this._info.speed._points.map(\n      function(p) { return _this._prepare_data_point(p, _this.m_to_mi, _this.ms_to_mih,\n        function(a, b) { return _this._toFixed_helper(a, 2) + ' mi, ' + _this._toFixed_helper(b, 2) + ' mi/h'; });\n      });\n  },\n  get_speed_max:          function() { return this.m_to_km(this._info.speed.max) * 3600; },\n  get_speed_max_imp:      function() { return this.to_miles(this.get_speed_max()); },\n\n  get_average_hr:         function() { return this._info.hr.avg; },\n  get_average_temp:         function() { return this._info.atemp.avg; },\n  get_average_cadence:         function() { return this._info.cad.avg; },\n  get_heartrate_data:     function() {\n    var _this = this;\n    return this._info.hr._points.map(\n      function(p) { return _this._prepare_data_point(p, _this.m_to_km, null,\n        function(a, b) { return _this._toFixed_helper(a, 2) + ' km, ' + _this._toFixed_helper(b, 0) + ' bpm'; });\n      });\n  },\n  get_heartrate_data_imp: function() {\n    var _this = this;\n    return this._info.hr._points.map(\n      function(p) { return _this._prepare_data_point(p, _this.m_to_mi, null,\n        function(a, b) { return _this._toFixed_helper(a, 2) + ' mi, ' + _this._toFixed_helper(b, 0) + ' bpm'; });\n      });\n  },\n  get_cadence_data:     function() {\n    var _this = this;\n    return this._info.cad._points.map(\n      function(p) { return _this._prepare_data_point(p, _this.m_to_km, null,\n        function(a, b) { return _this._toFixed_helper(a, 2) + ' km, ' + _this._toFixed_helper(b, 0) + ' rpm'; });\n      });\n  },\n  get_temp_data:     function() {\n    var _this = this;\n    return this._info.atemp._points.map(\n      function(p) { return _this._prepare_data_point(p, _this.m_to_km, null,\n        function(a, b) { return _this._toFixed_helper(a, 2) + ' km, ' + _this._toFixed_helper(b, 0) + ' degrees'; });\n      });\n  },\n  get_cadence_data_imp:     function() {\n    var _this = this;\n    return this._info.cad._points.map(\n      function(p) { return _this._prepare_data_point(p, _this.m_to_mi, null,\n        function(a, b) { return _this._toFixed_helper(a, 2) + ' mi, ' + _this._toFixed_helper(b, 0) + ' rpm'; });\n      });\n  },\n  get_temp_data_imp:     function() {\n    var _this = this;\n    return this._info.atemp._points.map(\n      function(p) { return _this._prepare_data_point(p, _this.m_to_mi, null,\n        function(a, b) { return _this._toFixed_helper(a, 2) + ' mi, ' + _this._toFixed_helper(b, 0) + ' degrees'; });\n      });\n  },\n\n  reload: function() {\n    this._init_info();\n    this.clearLayers();\n    this._parse(this._gpx, this.options, this.options.async);\n  },\n\n  // Private methods\n  _merge_objs: function(a, b) {\n    var _ = {};\n    for (var attr in a) { _[attr] = a[attr]; }\n    for (var attr in b) { _[attr] = b[attr]; }\n    return _;\n  },\n\n  _prepare_data_point: function(p, trans1, trans2, trans_tooltip) {\n    var r = [trans1 && trans1(p[0]) || p[0], trans2 && trans2(p[1]) || p[1]];\n    r.push(trans_tooltip && trans_tooltip(r[0], r[1]) || (r[0] + ': ' + r[1]));\n    return r;\n  },\n\n  _prepare_markers: function(markers) {\n    function iconize(url) {\n      return new L.GPXTrackIcon({iconUrl: url});\n    }\n\n    Object.entries(markers).forEach(([key, value]) => {\n      if (key === 'wptIcons' || key === 'wptTypeIcons') {\n        markers[key] = this._prepare_markers(value);\n      } else if (key === 'pointMatchers') {\n        markers[key] = value.map(e => {\n          if (typeof(e.icon) === 'string') {\n            e.icon = iconize(e.icon);\n          }\n          return e;\n        });\n      } else if (typeof(value) === 'string') {\n        markers[key] = iconize(value);\n      } else if (typeof(value) === 'object' && value !== null) {\n        markers[key] = value;\n      }\n    });\n\n    return markers;\n  },\n\n  _init_info: function() {\n    this._info = {\n      name: null,\n      length: 0.0,\n      elevation: {gain: 0.0, loss: 0.0, max: 0.0, min: Infinity, _points: []},\n      speed : {max: 0.0, _points: []},\n      hr: {avg: 0, _total: 0, _points: []},\n      duration: {start: null, end: null, moving: 0, total: 0},\n      atemp: {avg: 0, _total: 0, _points: []},\n      cad: {avg: 0, _total: 0, _points: []}\n    };\n  },\n\n  _load_xml: function(url, cb, options, async) {\n    if (async == undefined) async = this.options.async;\n    if (options == undefined) options = this.options;\n\n    var _this = this;\n    var req = new window.XMLHttpRequest();\n    req.open('GET', url, async);\n    try {\n      req.overrideMimeType('text/xml'); // unsupported by IE\n    } catch(e) {}\n    req.onloadend = function() {\n      if (req.status == 200) {\n        cb(req.responseXML, options);\n      } else {\n        _this.fire('error', { err: 'Error fetching resource: ' + url });\n      }\n    };\n    req.send(null);\n  },\n\n  _parse: function(input, options, async) {\n    var _this = this;\n    var cb = function(gpx, options) {\n      var layers = _this._parse_gpx_data(gpx, options);\n      if (!layers) {\n        _this.fire('error', { err: 'No parseable layers of type(s) ' + JSON.stringify(options.gpx_options.parseElements) });\n        return;\n      }\n      _this.addLayer(layers);\n      _this.fire('loaded', { layers: layers, element: gpx });\n    }\n    if (input.substr(0,1)==='<') { // direct XML has to start with a <\n      var parser = new DOMParser();\n      if (async) {\n        setTimeout(function() {\n          cb(parser.parseFromString(input, \"text/xml\"), options);\n        });\n      } else {\n        cb(parser.parseFromString(input, \"text/xml\"), options);\n      }\n    } else {\n      this._load_xml(input, cb, options, async);\n    }\n  },\n\n  _parse_gpx_data: function(xml, options) {\n    var i, t, l, el, layers = [];\n\n    var name = xml.getElementsByTagName('name');\n    if (name.length > 0) {\n      this._info.name = name[0].textContent;\n    }\n    var desc = xml.getElementsByTagName('desc');\n    if (desc.length > 0) {\n      this._info.desc = desc[0].textContent;\n    }\n    var author = xml.getElementsByTagName('author');\n    if (author.length > 0) {\n      this._info.author = author[0].textContent;\n    }\n    var copyright = xml.getElementsByTagName('copyright');\n    if (copyright.length > 0) {\n      this._info.copyright = copyright[0].textContent;\n    }\n\n    var parseElements = options.gpx_options.parseElements;\n    if (parseElements.indexOf('route') > -1) {\n      // routes are <rtept> tags inside <rte> sections\n      var routes = xml.getElementsByTagName('rte');\n      for (i = 0; i < routes.length; i++) {\n        var route = routes[i];\n        var base_style = this._extract_styling(route);\n        var polyline_options = this._get_polyline_options(options.polyline_options, i);\n        layers = layers.concat(this._parse_segment(routes[i], options, base_style, polyline_options, 'rtept'));\n      }\n    }\n\n    if (parseElements.indexOf('track') > -1) {\n      // tracks are <trkpt> tags in one or more <trkseg> sections in each <trk>\n      var tracks = xml.getElementsByTagName('trk');\n      for (i = 0; i < tracks.length; i++) {\n        var track = tracks[i];\n        var base_style = this._extract_styling(track);\n        var polyline_options = this._get_polyline_options(options.polyline_options, i);\n\n        if (options.gpx_options.joinTrackSegments) {\n          layers = layers.concat(this._parse_segment(track, options, base_style, polyline_options, 'trkpt'));\n        } else {\n          var segments = track.getElementsByTagName('trkseg');\n          for (j = 0; j < segments.length; j++) {\n            layers = layers.concat(this._parse_segment(segments[j], options, base_style, polyline_options, 'trkpt'));\n          }\n        }\n      }\n    }\n\n    this._info.hr.avg = Math.round(this._info.hr._total / this._info.hr._points.length);\n    this._info.cad.avg = Math.round(this._info.cad._total / this._info.cad._points.length);\n    this._info.atemp.avg = Math.round(this._info.atemp._total / this._info.atemp._points.length);\n\n    // parse waypoints and add markers for each of them\n    if (parseElements.indexOf('waypoint') > -1) {\n      el = xml.getElementsByTagName('wpt');\n      for (i = 0; i < el.length; i++) {\n        var ll = new L.LatLng(\n            el[i].getAttribute('lat'),\n            el[i].getAttribute('lon'));\n\n        var nameEl = el[i].getElementsByTagName('name');\n        var name = nameEl.length > 0 ? nameEl[0].textContent : '';\n\n        var descEl = el[i].getElementsByTagName('desc');\n        var desc = descEl.length > 0 ? descEl[0].textContent : '';\n\n        var symEl = el[i].getElementsByTagName('sym');\n        var symKey = symEl.length > 0 ? symEl[0].textContent : null;\n\n        var typeEl = el[i].getElementsByTagName('type');\n        var typeKey = typeEl.length > 0 ? typeEl[0].textContent : null;\n\n        /*\n         * Add waypoint marker based on the waypoint symbol key.\n         *\n         * First look for a configured icon for that symKey. If not found, look\n         * for a configured icon URL for that symKey and build an icon from it.\n         * If none of those match, look through the point matchers for a match\n         * on the waypoint's name.\n         *\n         * Otherwise, fall back to the default icon if one was configured, or\n         * finally to the default icon URL, if one was configured.\n         */\n        var wptIcons = options.markers.wptIcons;\n        var wptTypeIcons = options.markers.wptTypeIcons;\n        var ptMatchers = options.markers.pointMatchers || [];\n        var symIcon;\n        if (wptIcons && symKey && wptIcons[symKey]) {\n          symIcon = wptIcons[symKey];\n        } else if (wptTypeIcons && typeKey && wptTypeIcons[typeKey]) {\n          symIcon = wptTypeIcons[typeKey];\n        } else if (ptMatchers.length > 0) {\n          for (var j = 0; j < ptMatchers.length; j++) {\n            if (ptMatchers[j].regex.test(name)) {\n              symIcon = ptMatchers[j].icon;\n              break;\n            }\n          }\n        } else if (wptIcons && wptIcons['']) {\n          symIcon = wptIcons[''];\n        }\n\n        if (!symIcon) {\n          console.log(\n            'No waypoint icon could be matched for symKey=%s,typeKey=%s,name=%s on waypoint %o',\n            symKey, typeKey, name, el[i]);\n          continue;\n        }\n\n        var marker = new L.Marker(ll, {\n          clickable: options.marker_options.clickable,\n          title: name,\n          icon: symIcon,\n          type: 'waypoint'\n        });\n        marker.bindPopup(\"<b>\" + name + \"</b>\" + (desc.length > 0 ? '<br>' + desc : '')).openPopup();\n        this.fire('addpoint', { point: marker, point_type: 'waypoint', element: el[i] });\n        layers.push(marker);\n      }\n    }\n\n    if (layers.length > 1) {\n       return new L.FeatureGroup(layers);\n    } else if (layers.length == 1) {\n      return layers[0];\n    }\n  },\n\n  _parse_segment: function(line, options, base_style, polyline_options, tag) {\n    var el = line.getElementsByTagName(tag);\n    if (!el.length) return [];\n\n    var coords = [];\n    var markers = [];\n    var layers = [];\n    var last = null;\n\n    for (var i = 0; i < el.length; i++) {\n      var _, ll = new L.LatLng(\n        el[i].getAttribute('lat'),\n        el[i].getAttribute('lon'));\n      ll.meta = { time: null, ele: null, hr: null, cad: null, atemp: null, speed: null };\n\n      _ = el[i].getElementsByTagName('time');\n      if (_.length > 0) {\n        ll.meta.time = new Date(Date.parse(_[0].textContent));\n      } else {\n        ll.meta.time = new Date('1970-01-01T00:00:00');\n      }\n      var time_diff = last != null ? Math.abs(ll.meta.time - last.meta.time) : 0;\n\n      _ = el[i].getElementsByTagName('ele');\n      if (_.length > 0) {\n        ll.meta.ele = parseFloat(_[0].textContent);\n      } else {\n        // If the point doesn't have an <ele> tag, assume it has the same\n        // elevation as the point before it (if it had one).\n        ll.meta.ele = last != null ? last.meta.ele : null;\n      }\n      var ele_diff = last != null ? ll.meta.ele - last.meta.ele : 0;\n      var dist_3d = last != null ? this._dist3d(last, ll) : 0;\n\n      _ = el[i].getElementsByTagName('speed');\n      if (_.length > 0) {\n        ll.meta.speed = parseFloat(_[0].textContent);\n      } else {\n        // speed in meter per second\n        ll.meta.speed = time_diff > 0 ? 1000.0 * dist_3d / time_diff : 0;\n      }\n\n      _ = el[i].getElementsByTagName('name');\n      if (_.length > 0) {\n        var name = _[0].textContent;\n        var ptMatchers = options.markers.pointMatchers || [];\n\n        for (var j = 0; j < ptMatchers.length; j++) {\n          if (ptMatchers[j].regex.test(name)) {\n            markers.push({ label: name, coords: ll, icon: ptMatchers[j].icon, element: el[i] });\n            break;\n          }\n        }\n      }\n\n      this._info.length += dist_3d;\n\n      _ = el[i].getElementsByTagNameNS('*', 'hr');\n      if (_.length > 0) {\n        ll.meta.hr = parseInt(_[0].textContent);\n        this._info.hr._points.push([this._info.length, ll.meta.hr]);\n        this._info.hr._total += ll.meta.hr;\n      }\n\n      _ = el[i].getElementsByTagNameNS('*', 'cad');\n      if (_.length > 0) {\n        ll.meta.cad = parseInt(_[0].textContent);\n        this._info.cad._points.push([this._info.length, ll.meta.cad]);\n        this._info.cad._total += ll.meta.cad;\n      }\n\n      _ = el[i].getElementsByTagNameNS('*', 'atemp');\n      if (_.length > 0) {\n        ll.meta.atemp = parseInt(_[0].textContent);\n        this._info.atemp._points.push([this._info.length, ll.meta.atemp]);\n        this._info.atemp._total += ll.meta.atemp;\n      }\n\n      if (ll.meta.ele > this._info.elevation.max) {\n        this._info.elevation.max = ll.meta.ele;\n      }\n      if (ll.meta.ele < this._info.elevation.min) {\n        this._info.elevation.min = ll.meta.ele;\n      }\n      this._info.elevation._points.push([this._info.length, ll.meta.ele]);\n\n      if (ll.meta.speed > this._info.speed.max) {\n        this._info.speed.max = ll.meta.speed;\n      }\n      this._info.speed._points.push([this._info.length, ll.meta.speed]);\n\n      if ((last == null) && (this._info.duration.start == null)) {\n        this._info.duration.start = ll.meta.time;\n      }\n      this._info.duration.end = ll.meta.time;\n      this._info.duration.total += time_diff;\n      if (time_diff < options.max_point_interval) {\n        this._info.duration.moving += time_diff;\n      }\n\n      if (ele_diff > 0) {\n        this._info.elevation.gain += ele_diff;\n      } else {\n        this._info.elevation.loss += Math.abs(ele_diff);\n      }\n\n      last = ll;\n      coords.push(ll);\n    }\n\n    // add track\n    var l = new L.Polyline(coords, this._extract_styling(line, base_style, polyline_options));\n    this.fire('addline', { line: l, element: line });\n    layers.push(l);\n\n    if (options.markers.startIcon) {\n      // add start pin\n      var marker = new L.Marker(coords[0], {\n        clickable: options.marker_options.clickable,\n        icon: options.markers.startIcon,\n      });\n      this.fire('addpoint', { point: marker, point_type: 'start', element: el[0], line: line });\n      layers.push(marker);\n    }\n\n    if (options.markers.endIcon) {\n      // add end pin\n      var marker = new L.Marker(coords[coords.length-1], {\n        clickable: options.marker_options.clickable,\n        icon: options.markers.endIcon,\n      });\n      this.fire('addpoint', { point: marker, point_type: 'end', element: el[el.length-1], line: line });\n      layers.push(marker);\n    }\n\n    // add named markers\n    for (var i = 0; i < markers.length; i++) {\n      var marker = new L.Marker(markers[i].coords, {\n        clickable: options.marker_options.clickable,\n        title: markers[i].label,\n        icon: markers[i].icon\n      });\n      this.fire('addpoint', { point: marker, point_type: 'label', element: markers[i].element });\n      layers.push(marker);\n    }\n\n    return layers;\n  },\n\n  _get_polyline_options: function(polyline_options, i) {\n    /*\n     * Handle backwards compatibility with polyline_options being provided as a single object.\n     * In this situation, the provided style is expected to apply to all routes and tracks in the file.\n     */\n    if (! Array.isArray(polyline_options)) {\n      return polyline_options;\n    }\n    return polyline_options[i] || {};\n  },\n\n  _extract_styling: function(el, base, overrides) {\n    var style = this._merge_objs(_DEFAULT_POLYLINE_OPTS, base);\n    var e = el.getElementsByTagNameNS(_GPX_STYLE_NS, 'line');\n    if (e.length > 0) {\n      var _ = e[0].getElementsByTagName('color');\n      if (_.length > 0) style.color = '#' + _[0].textContent;\n      var _ = e[0].getElementsByTagName('opacity');\n      if (_.length > 0) style.opacity = _[0].textContent;\n      var _ = e[0].getElementsByTagName('weight');\n      if (_.length > 0) style.weight = _[0].textContent;\n      var _ = e[0].getElementsByTagName('linecap');\n      if (_.length > 0) style.lineCap = _[0].textContent;\n      var _ = e[0].getElementsByTagName('linejoin');\n      if (_.length > 0) style.lineJoin = _[0].textContent;\n      var _ = e[0].getElementsByTagName('dasharray');\n      if (_.length > 0) style.dashArray = _[0].textContent;\n      var _ = e[0].getElementsByTagName('dashoffset');\n      if (_.length > 0) style.dashOffset = _[0].textContent;\n    }\n    return this._merge_objs(style, overrides)\n  },\n\n  _dist2d: function(a, b) {\n    var R = 6371000;\n    var dLat = this._deg2rad(b.lat - a.lat);\n    var dLon = this._deg2rad(b.lng - a.lng);\n    var r = Math.sin(dLat/2) *\n      Math.sin(dLat/2) +\n      Math.cos(this._deg2rad(a.lat)) *\n      Math.cos(this._deg2rad(b.lat)) *\n      Math.sin(dLon/2) *\n      Math.sin(dLon/2);\n    var c = 2 * Math.atan2(Math.sqrt(r), Math.sqrt(1-r));\n    var d = R * c;\n    return d;\n  },\n\n  _dist3d: function(a, b) {\n    var planar = this._dist2d(a, b);\n    var height = Math.abs(b.meta.ele - a.meta.ele);\n    return Math.sqrt(Math.pow(planar, 2) + Math.pow(height, 2));\n  },\n\n  _deg2rad: function(deg) {\n    return deg * Math.PI / 180;\n  }\n});\n"],
  "mappings": "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",
  "names": ["options"]
}
